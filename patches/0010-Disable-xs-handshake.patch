From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Rochelemagne <rochelemagne@cpanel.net>
Date: Thu, 20 Jul 2017 10:54:39 -0600
Subject: [PATCH] Disable xs handshake

This commit disables the XS handshake.
We can consider reverting it at anytime.

This was required during the B::C development cycle in order
to avoid to rebuild all XS modules ad the perl API version
was bumped with the introduction of Perl_DeclareStaticMemory.

We decided to preserve it as a 'feature' to avoid XS handshake
issued during upcp/updates when bumping the perl version.

As most of the time the XS module might survive, and if that's not
the case it would just crash in a worst way. But this should
reduce the amount of failures during the window timeframe where
we are upgrading perl and some daemons like cpsrvd are still running.
---
 SOURCES/perl/util.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/SOURCES/perl/util.c b/SOURCES/perl/util.c
index a39e85f2..525d0e18 100644
--- a/SOURCES/perl/util.c
+++ b/SOURCES/perl/util.c
@@ -5875,7 +5875,7 @@ Perl_xs_handshake(const U32 key, void * v_my_perl, const char * file, ...)
 
     got = INT2PTR(void*, (UV)(key & HSm_KEY_MATCH));
     need = (void *)(HS_KEY(FALSE, FALSE, "", "") & HSm_KEY_MATCH);
-    if (UNLIKELY(got != need))
+    if (0 && UNLIKELY(got != need)) /* disable xs_handshake */
         goto bad_handshake;
 /* try to catch where a 2nd threaded perl interp DLL is loaded into a process
    by a XS DLL compiled against the wrong interl DLL b/c of bad @INC, and the
@@ -5900,7 +5900,7 @@ Perl_xs_handshake(const U32 key, void * v_my_perl, const char * file, ...)
     need = &PL_stack_sp;
 #endif
     stage = "second";
-    if(UNLIKELY(got != need)) {
+    if(0 && UNLIKELY(got != need)) { /* disable XS handshake to avoid to rebuild all our XS modules */
         bad_handshake:/* recycle branch and string from above */
         if(got != (void *)HSf_NOCHK)
             noperl_die("%s: loadable library and perl binaries are mismatched"
